{
    "variables":
    [
        ["CSteamID", "m_Friend"],
        ["CSteamID", "m_Clan"],
        ["CSteamID", "m_CoPlayFriend"],
        ["Texture2D", "m_SmallAvatar"],
        ["Texture2D", "m_MediumAvatar"],
        ["Texture2D", "m_LargeAvatar"]
    ],

    "onenablecode": [
        "if (SteamFriends.GetFriendCount(EFriendFlags.k_EFriendFlagImmediate) == 0) {",
        "\tDebug.LogError(\"You must have atleast one friend to use this Test\");",
        "\this.enabled = false;",
        "\treturn;",
        "}",
        "",
        "if (SteamFriends.GetClanCount() == 0) {",
        "\tDebug.LogError(\"You must have atleast one clan to use this Test\");",
        "\treturn;",
        "}"
    ],

    "extrafunctions": [
        "private Texture2D GetSteamImageAsTexture2D(int iImage) {",
        "\tTexture2D ret;",
        "\tuint ImageWidth;",
        "\tuint ImageHeight;",
        "\tbool ret = SteamUtils.GetImageSize(FriendAvatar, out ImageWidth, out ImageHeight);",
        "",
        "\tif (ret && ImageWidth > 0 && ImageHeight > 0) {",
        "\t\tbyte[] Image = new byte[ImageWidth * ImageHeight * 4];",
        "",
        "\t\tret = SteamUtils.GetImageRGBA(FriendAvatar, Image, (int)(ImageWidth * ImageHeight * 4));",
        "",
        "\t\tret = new Texture2D((int)ImageWidth, (int)ImageHeight, TextureFormat.RGBA32, false, true);",
        "\t\tret.LoadRawTextureData(Image);",
        "\t\tret.Apply();",
        "\t\treturn ret;",
        "\t}",
        "}"
    ],

    "functions":
    [
        {
            "name": "GetPersonaName",
            "label": true
        },
        {
            "name": "SetPersonaName",
            "args": ["SteamFriends.GetPersonaName()"],
            "postcall": ["OnSetPersonaNameResponseCallResult.Set(ret);"]
        },
        {
            "name": "GetPersonaState",
            "label": true
        },
        {
            "name": "GetFriendCount",
            "label": true,
            "args": ["k_EFriendFlagImmediate"]
        },
        {
            "name": "GetFriendByIndex",
            "override": [
                "m_Friend = SteamFriends.GetFriendByIndex(0, k_EFriendFlagImmediate);",
                "GUILayout.Label(\"GetFriendByIndex(0, k_EFriendFlagImmediate) : \" + m_Friend);"
            ]
        },
        {
            "name": "GetFriendRelationship",
            "label": true,
            "args": ["m_Friend"]
        },
        {
            "name": "GetFriendPersonaState",
            "label": true,
            "args": ["m_Friend"]
        },
        {
            "name": "GetFriendPersonaName",
            "label": true,
            "args": ["m_Friend"]
        },
        {
            "name": "GetFriendGamePlayed",
            "override": [
                "{",
                "\tvar fgi = new FriendGameInfo_t();",
                "\tbool ret = SteamFriends.GetFriendGamePlayed(m_Friend, out fgi);",
                "\tGUILayout.Label(\"GetFriendGamePlayed(m_Friend, out fgi) : \" + ret + \" -- \" + fgi.m_gameID + \" -- \" + fgi.m_unGameIP + \" -- \" + fgi.m_usGamePort + \" -- \" + fgi.m_usQueryPort + \" -- \" + fgi.m_steamIDLobby);",
                "}"
            ]
        },
        {
            "name": "GetFriendPersonaNameHistory",
            "label": true,
            "args": ["m_Friend", "1"]
        },
        {
            "name": "GetFriendSteamLevel",
            "label": true,
            "args": ["m_Friend"]
        },
        {
            "name": "GetPlayerNickname",
            "label": true,
            "args": ["m_Friend"]
        },
        {
            "name": "GetFriendsGroupCount",
            "override": [
                "{",
                "\tint FriendsGroupCount = SteamFriends.GetFriendsGroupCount();",
                "\tGUILayout.Label(\"GetFriendsGroupCount() : \" + FriendsGroupCount);"
            ]
        },
        {
            "name": "GetFriendsGroupIDByIndex",
            "override": [
                "\tif (FriendsGroupCount > 0) {",
                "\t\tFriendsGroupID_t FriendsGroupID = SteamFriends.GetFriendsGroupIDByIndex(0);",
                "\t\tGUILayout.Label(\"SteamFriends.GetFriendsGroupIDByIndex(0) : \" + FriendsGroupID);"
            ]
        },
        {
            "name": "GetFriendsGroupName",
            "override": [
                "\t\tGUILayout.Label(\"GetFriendsGroupName(FriendsGroupID) : \" + SteamFriends.GetFriendsGroupName(FriendsGroupID));"
            ]
        },
        {
            "name": "GetFriendsGroupMembersCount",
            "override": [
                "\t\tint FriendsGroupMembersCount = SteamFriends.GetFriendsGroupMembersCount(FriendsGroupID);",
                "\t\tGUILayout.Label(\"GetFriendsGroupMembersCount(FriendsGroupID) : \" + FriendsGroupMembersCount);"
            ]
        },
        {
            "name": "GetFriendsGroupMembersList",
            "override": [
                "\t\tif (FriendsGroupMembersCount > 0) {",
                "\t\t\tCSteamID[] FriendsGroupMembersList = new CSteamID[FriendsGroupMembersCount];",
                "\t\t\tSteamFriends.GetFriendsGroupMembersList(FriendsGroupID, FriendsGroupMembersList, FriendsGroupMembersCount);",
                "\t\t\tGUILayout.Label(\"GetFriendsGroupMembersList(FriendsGroupID, FriendsGroupMembersList, FriendsGroupMembersCount) : \" + FriendsGroupMembersList[0]);",
                "\t\t}",
                "\t}",
                "}"
            ]
        },
        {
            "name": "HasFriend",
            "label": true,
            "args": ["m_Friend", "k_EFriendFlagImmediate"]
        },
        {
            "name": "GetClanCount",
            "label": true
        },
        {
            "name": "GetClanByIndex",
            "override": [
                "m_Clan = SteamFriends.GetClanByIndex(0);",
                "GUILayout.Label(\"GetClanByIndex(0) : \" + m_Clan);"
            ]
        },
        {
            "name": "GetClanName",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "GetClanTag",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "GetClanActivityCounts",
            "label": true,
            "args": ["m_Clan", "out Online", "out InGame", "out Chatting"],
            "outargs": [["int", "Online"], ["int", "InGame"], ["int", "Chatting"]]
        },
        {
            "name": "DownloadClanActivityCounts",
            "args": ["Clans", "Clans.Legnth"],
            "precall": ["CSteamID[] Clans = { m_Clan, new CSteamID(103582791434672565) }; // m_Clan Steam Universe"],
            "postcall": ["OnDownloadClanActivityCountsResultCallResult.Set(ret); // This call never seems to produce a callback."]
        },
        {
            "name": "GetFriendCountFromSource",
            "override": [
                "{",
                "\tint FriendCount = SteamFriends.GetFriendCountFromSource(m_Clan);",
                "\tGUILayout.Label(\"GetFriendCountFromSource(m_Clan) : \" + FriendCount);"
            ]
        },
        {
            "name": "GetFriendFromSourceByIndex",
            "override": [
                "\tif (FriendCount > 0) {",
                "\t\tGUILayout.Label(\"GetFriendFromSourceByIndex(m_Clan, 0) : \" + SteamFriends.GetFriendFromSourceByIndex(m_Clan, 0));",
                "\t}",
                "}"
            ]
        },
        {
            "name": "IsUserInSource",
            "label": true,
            "args": ["m_Friend", "m_Clan"]
        },
        {
            "name": "SetInGameVoiceSpeaking",
            "args": ["SteamUser.GetSteamID()", "false"]
        },
        {
            "name": "ActivateGameOverlay",
            "args": ["\"Friends\""]
        },
        {
            "name": "ActivateGameOverlayToUser",
            "args": ["\"friendadd\"", "new CSteamID(76561197991230424)"]
        },
        {
            "name": "ActivateGameOverlayToWebPage",
            "args": ["\"http://google.com\""]
        },
        {
            "name": "ActivateGameOverlayToStore",
            "args": ["(AppId_t)440", "EOverlayToStoreFlag.k_EOverlayToStoreFlag_None"]
        },
        {
            "name": "SetPlayedWith",
            "args": ["new CSteamID(76561197991230424)"]
        },
        {
            "name": "ActivateGameOverlayInviteDialog",
            "args": ["new CSteamID(76561197991230424)"]
        },
        {
            "name": "GetSmallFriendAvatar",
            "args": ["m_Friend"],
            "postcall": ["m_SmallAvatar = GetSteamImageAsTexture2D(ret);"]
        },
        {
            "name": "GetMediumFriendAvatar",
            "args": ["m_Friend"],
            "postcall": ["m_MediumAvatar = GetSteamImageAsTexture2D(ret);"]
        },
        {
            "name": "GetLargeFriendAvatar",
            "args": ["m_Friend"],
            "postcall": ["m_LargeAvatar = GetSteamImageAsTexture2D(ret);"]
        },
        {
            "name": "RequestUserInformation",
            "args": ["m_Friend", "false"]
        },
        {
            "name": "RequestClanOfficerList",
            "args": ["m_Clan"],
            "postcall": ["OnFriendRichPresenceCallResult.Set(ret);"]
        },
        {
            "name": "GetClanOwner",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "GetClanOfficerCount",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "GetClanOfficerByIndex",
            "label": true,
            "args": ["m_Clan", "0"]
        },
        {
            "name": "GetUserRestrictions",
            "label": true
        },
        {
            "name": "SetRichPresence",
            "args": ["\"status\"", "\"Testing 1.. 2.. 3..\""]
        },
        {
            "name": "ClearRichPresence"
        },
        {
            "name": "GetFriendRichPresence",
            "label": true,
            "args": ["SteamUser.GetSteamID()", "\"status\""]
        },
        {
            "name": "GetFriendRichPresenceKeyCount",
            "label": true,
            "args": ["SteamUser.GetSteamID()"]
        },
        {
            "name": "GetFriendRichPresenceKeyByIndex",
            "label": true,
            "args": ["SteamUser.GetSteamID()", "0"]
        },
        {
            "name": "RequestFriendRichPresence",
            "args": ["m_Friend"]
        },
        {
            "name": "InviteUserToGame",
            "args": ["SteamUser.GetSteamID()", "\"testing\""]
        },
        {
            "name": "GetCoplayFriendCount",
            "label": true
        },
        {
            "name": "GetCoplayFriend",
            "override": [
                "m_CoPlayFriend = SteamFriends.GetCoplayFriend(0);",
                "GUILayout.Label(\"GetCoplayFriend(0) : \" + m_CoPlayFriend);"
            ]
        },
        {
            "name": "GetFriendCoplayTime",
            "label": true
        },
        {
            "name": "GetFriendCoplayGame",
            "label": true
        },
        {
            "name": "JoinClanChatRoom",
            "args": ["m_Clan"],
            "postcall": ["OnJoinClanChatRoomCompletionResultCallResult.Set(ret);"]
        },
        {
            "name": "LeaveClanChatRoom",
            "args": ["m_Clan"]
        },
        {
            "name": "GetClanChatMemberCount",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "GetChatMemberByIndex",
            "label": true,
            "args": ["m_Clan", "0"]
        },
        {
            "name": "SendClanChatMessage",
            "args": ["m_Clan", "\"Test\""]
        },
        {
            "name": "GetClanChatMessage",
            "override": ["//GUILayout.Label(\"SteamFriends.GetClanChatMessage() : \" + SteamFriends.GetClanChatMessage()); // N/A - Must be called from within the callback OnGameConnectedClanChatMsg"]
        },
        {
            "name": "IsClanChatAdmin",
            "label": true,
            "args": ["m_Clan", "0"]
        },
        {
            "name": "IsClanChatWindowOpenInSteam",
            "label": true,
            "args": ["m_Clan"]
        },
        {
            "name": "OpenClanChatWindowInSteam",
            "args": ["m_Clan"]
        },
        {
            "name": "CloseClanChatWindowInSteam",
            "args": ["m_Clan"]
        },
        {
            "name": "SetListenForFriendsMessages",
            "args": ["true"]
        },
        {
            "name": "ReplyToFriendMessage",
            "args": ["SteamUser.GetSteamID()", "\"Testing!\""]
        },
        {
            "name": "GetFriendMessage",
            "override": ["//GUILayout.Label(\"SteamFriends.GetFriendMessage() : \" + SteamFriends.GetFriendMessage()); // N/A - Must be called from within the callback OnGameConnectedFriendChatMsg"]
        },
        {
            "name": "GetFollowerCount",
            "args": ["SteamUser.GetSteamID()"],
            "postcall": ["OnFriendsGetFollowerCountCallResult.Set(ret);"]
        },
        {
            "name": "IsFollowing",
            "args": ["m_Friend"],
            "postcall": ["OnFriendsIsFollowingCallResult.Set(ret);"]
        },
        {
            "name": "EnumerateFollowingList",
            "args": ["0"],
            "postcall": ["OnFriendsEnumerateFollowingListCallResult.Set(ret);"]
        }
    ],

    "callresults":
    [
        "ClanOfficerListResponse_t",
        "DownloadClanActivityCountsResult_t",
        "JoinClanChatRoomCompletionResult_t",
        "FriendsGetFollowerCount_t",
        "FriendsIsFollowing_t",
        "FriendsEnumerateFollowingList_t",
        "SetPersonaNameResponse_t"
    ],

    "callbacks":
    {
        "GameConnectedClanChatMsg_t":
        {
            "customcode":
            [
                "string Text;",
                "EChatEntryType ChatEntryType;",
                "CSteamID Chatter;",
                "int ret = SteamFriends.GetClanChatMessage(pCallback.m_steamIDClanChat, pCallback.m_iMessageID, out Text, 2048, out ChatEntryType, out Chatter); // Must be called from within OnGameConnectedClanChatMsg",
                "print(ret + \" \" + Chatter + \": \" + Text);"
            ]
        },
        "GameConnectedFriendChatMsg_t":
        {
            "customcode":
            [
                "string Text;",
                "EChatEntryType ChatEntryType;",
                "int ret = SteamFriends.GetFriendMessage(pCallback.m_steamIDUser, pCallback.m_iMessageID, out Text, 2048, out ChatEntryType); // Must be called from within OnGameConnectedFriendChatMsg",
                "print(ret + \" \" + pCallback.m_steamIDUser + \": \" + Text);"
            ]
        }
    }
}